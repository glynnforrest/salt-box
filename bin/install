#!/usr/bin/env python

import os
from sys import platform
from distutils.spawn import find_executable
from subprocess import call

def create_minion_config():
    print("Create a salt-minion config pointing to the salt-box repo? (y/n): ")
    choice = raw_input()
    if choice.lower() == 'y':
        print("Creating /etc/salt/minion pointing to salt-box directory...")
        call('sudo mkdir -p /etc/salt', shell=True)
        template = """
file_client: local
log_level: info
file_roots:
  base:
    - {dir}/salt
state_output: changes
pillar_roots:
  base:
    - {dir}/pillar
"""
        with open('_minion', 'w') as f:
            f.write(template.format(dir=os.getcwd()))

        call('sudo mv _minion /etc/salt/minion', shell=True)
    else:
        print("Skipping minion config.")

def check_and_finish():
    print("Running 'salt-call test.ping' to check salt is working...")
    call('sudo salt-call test.ping', shell=True)
    print("Now add your top files, then run highstate!")

def install_mac():
    if find_executable('brew'):
        print("Homebrew already installed.")
    else:
        print("Homebrew not found, installing...")
        call('ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"', shell=True)

    if find_executable('salt-call'):
        print("Salt already installed.")
    else:
        print("Salt not found, installing...")
        call('brew update && brew install saltstack', shell=True)

    create_minion_config()
    check_and_finish()

def install_linux():
    if not find_executable('curl'):
        print("Curl not found, installing...")
        call('sudo apt-get install curl', shell=True)

    call('curl -L https://bootstrap.saltstack.com | sudo bash', shell=True)
    create_minion_config()
    check_and_finish()

if platform == 'linux' or platform == 'linux2':
    install_linux()
elif platform == 'darwin':
    install_mac()
else:
    print('{} platform not supported.'.format(platform))
